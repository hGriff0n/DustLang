e: 1
	e = 1
	h = 0

e: e
	e = 1
	h = 0

e: 3 + (h: 4)
	e = 7
	h = 4

e: h :+ 3
	e = 7
	h = 7

e: 3 + (h: 4 + e)
	e = 14
	h = 11

e: 3 + e / 3
	e = 7
	h = 11

// Something's messed up with the parser
(10 - 9)
-(10 - 9)

I think it's a problem with the expression actions
	The op/ gets pushed on the stack
	Then the ou- gets pushed on the stack
	Then the 3 gets pushed on the stack
		So the stack has 3 items on it
	This triggers the expression action
		Grouping the 3 and the op/ under ou-
	Need to push shift-reduce

e / -(3)
	ou-
		INT 3
		op/

e / -(10 - 9)
	ou-
		op-
			INT 9
			InT 10
		op/

e = e / -(10 - 9)

e: e = e / -(10 - 9)
	Var e
		Var e
			ou-
				op-
					INT 9
					INT 10
				op/
			op=
		Assignment :

-(3)		// ou- has two children (iff the above is run first) ???
	ou-
		INT 3
		Var e

e:= e / -(h - (e: 4)) + e ^ (h: 2) - h / 2  // 55
	e = 0			// 7
	h = 2

op-
	op/
		INT 2
		Var h
	op+
		op^
			Assign :
				INT 2
				Var h
			Var e
		Var e
			ou-
				op-
					Assign :
						INT 4
						Var e
					Var h
				op/
			Assign :=